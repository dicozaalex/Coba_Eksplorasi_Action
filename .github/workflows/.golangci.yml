run:
  concurrency: 12
  tests: false
  skip-dirs:
#    - internal/protobuf/
  skip-files:
    - .*test_client_lib\\.*.go

linters:
  enable:
    - govet #Vet examines Go source code and reports suspicious constructs, such as Printf calls whose arguments do not align with the format string
    - errcheck #Errcheck is a program for checking for unchecked errors in go programs. These unchecked errors can be critical bugs in some cases
    - staticcheck #Staticcheck is a go vet on steroids, applying a ton of static analysis checks
    - unused #Checks Go code for unused constants, variables, functions and types
    - gosimple #Linter for Go source code that specializes in simplifying a code
    - structcheck #Finds an unused struct fields
    - varcheck #Finds unused global variables and constants
    - ineffassign #Detects when assignments to existing variables are not used
    - deadcode #Finds unused code
    - typecheck #Like the front-end of a Go compiler, parses and type-checks Go code

    - golint #Golint differs from gofmt. Gofmt reformats Go source code, whereas golint prints out style mistakes
    - stylecheck #Stylecheck is a replacement for golint
    - gosec #Inspects source code for security problems
    - interfacer #Linter that suggests narrower interface types
    - unconvert #Remove unnecessary type conversions
    - dupl #Tool for code clone detection
    - goconst #Finds repeated strings that could be replaced by a constant
#    - gocyclo #Computes and checks the cyclomatic complexity of functions
    - gofmt #Gofmt checks whether code was gofmt-ed. By default this tool runs with -s option to check for code simplification
    - goimports #Goimports does everything that gofmt does. Additionally it checks unused imports
    - maligned #Tool to detect Go structs that would take less memory if their fields were sorted
    - depguard #Go linter that checks if package imports are in a list of acceptable packages
    - misspell #Finds commonly misspelled English words in comments
#    - lll #Reports long lines
    - unparam #Reports unused function parameters
    - nakedret #Finds naked returns in functions greater than a specified function length
    - prealloc #Finds slice declarations that could potentially be preallocated
    - scopelint #Scopelint checks for unpinned variables in go programs
    - gocritic #The most opinionated Go source code linter
#    - gochecknoinits #Checks that no init functions are present in Go code
#    - gochecknoglobals #Checks that no globals are present in Go code

issues:
  # Not using default exclusions because we want to require comments on public
  # functions and types.
  exclude-use-default: false
  exclude:
    # errcheck: Almost all programs ignore errors on these functions and in most cases it's ok
    - Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*printf?|os\.(Un)?Setenv). is not checked
    # golint: False positive when tests are defined in package 'test'
    - func name will be used as test\.Test.* by other packages, and that stutters; consider calling this
    # govet: Common false positives
    - (possible misuse of unsafe.Pointer|should have signature)
    - should have comment or be unexported
    - comment on exported `.*?` should be of the form
    - don't use an underscore in package name
